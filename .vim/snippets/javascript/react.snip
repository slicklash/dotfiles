snippet ire
abbr import React
options head
	import React from "react";
	${0}

snippet itl
abbr import testing-library/react
options head
	import { render, screen } from '@testing-library/react';
	${0}

snippet rco
abbr React Component
options head
	import React from "react";
	import styles from "./${1}.module.scss";

	type Props = {
	};

	const ${2}: React.FC<Props> = ({  }) => {
		return (<div className={styles.container}>
			${0}
		</div>
		);
	};

	export default $2;

snippet av
abbr Action (value)
options head
  export const ${1:NAME} = '${2:app}/$1';

  export const ${3:action} = ${4:payload} => ({
    type: $1,
    payload: $4
  });

snippet ao
abbr Action (object)
options head
  export const ${1:NAME} = '${2:app}/$1';

  export const ${3:action} = (${4:param1}, ${5:param2}${0}) => ({
    type: $1,
    payload: {
      $4,
      $5
    }
  });


snippet rd
abbr Reducer
options head
  export default function ${1:name}(state = {}, action) {
    switch (action.type) {
      case ${2:ACTION}:
        return ${0};
      default:
        return state;
    }
  }

snippet tt
abbr Translate
options word
  {t('${0}')}

snippet mid
abbr Middleware
options head
  const ${1:logMiddleware} = store => next => action => {
      console.log(action.type);${0}
      next(action);
  }


snippet chpp
abbr Changed props
  componentWillReceiveProps(nextProps) {
    Object.keys(nextProps)
      .filter(key => {
        return nextProps[key] !== this.props[key];
      })
      .map(key => {
        console.log('changed property:', key, 'from', this.props[key], 'to', nextProps[key]);
      });
  }
